on:
  push

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Cache build
        uses: actions/cache@v3
        id: cache_build
        with:
          path: .
          key: build
          restore-keys: |
            build

      - name: checkout self repo
        uses: actions/checkout@v3

      - name: Get version
        id: version
        run: |
          VERSION=$(grep '#define.*LIB_JSONNET_VERSION' include/libjsonnet.h | head -n 1 | cut -f 2 -d '"' | sed 's/^v//g')
          echo "::set-output name=VERSION::${version}"

      - name: Build
        id: build
        run: |
          make -j dist

      - name: Create Release
        id: release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.version.outputs.version }}
          release_name: v${{ needs.version.outputs.version }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: jsonnet-bin.tar.gz
          asset_name: jsonnet-bin-v${{ steps.version.outputs.version }}-linux.tar.gz
          asset_content_type: application/octet-stream
